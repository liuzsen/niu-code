name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install frontend dependencies
        working-directory: frontend
        run: pnpm install

      - name: Build frontend
        working-directory: frontend
        run: pnpm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
          retention-days: 1

  build-binaries:
    name: Build ${{ matrix.target }}
    needs: build-frontend
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x64 (musl for static linking)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: niu-code
            asset_name: niu-code-linux-x64
            use_cross: true

          # macOS x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: niu-code
            asset_name: niu-code-macos-x64
            use_cross: false

          # macOS ARM64 (Apple Silicon)
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: niu-code
            asset_name: niu-code-macos-arm64
            use_cross: false

          # Windows x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: niu-code.exe
            asset_name: niu-code-windows-x64.exe
            use_cross: false

    steps:
      - uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (Linux only)
        if: matrix.use_cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with cross (Linux)
        if: matrix.use_cross
        working-directory: backend
        run: cross build --release --target ${{ matrix.target }}

      - name: Build with cargo (macOS/Windows)
        if: ${{ !matrix.use_cross }}
        working-directory: backend
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: strip backend/target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Rename binary
        shell: bash
        run: |
          mkdir -p release
          cp backend/target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/${{ matrix.asset_name }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: release/${{ matrix.asset_name }}
          retention-days: 1

  create-release:
    name: Create Release
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Display structure
        run: ls -R artifacts/

      - name: Create release directory
        run: |
          mkdir -p release
          find artifacts -type f -name "niu-code-*" -exec cp {} release/ \;

      - name: Copy installation scripts
        run: |
          cp scripts/install.sh release/
          cp scripts/install.ps1 release/
          chmod +x release/install.sh

      - name: Generate checksums
        working-directory: release
        run: |
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation

            ### Quick Install (Linux/macOS)
            ```bash
            curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/install.sh | bash
            ```

            ### Quick Install (Windows - PowerShell as Administrator)
            ```powershell
            irm https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/install.ps1 | iex
            ```

            ### Manual Download
            Download the appropriate binary for your platform:
            - Linux: `niu-code-linux-x64`
            - macOS Intel: `niu-code-macos-x64`
            - macOS Apple Silicon: `niu-code-macos-arm64`
            - Windows: `niu-code-windows-x64.exe`

            ### Prerequisites
            - Node.js (v18 or higher)
            - Claude Code CLI: `npm install -g @anthropic-ai/claude-code`

            ### Access
            After installation, access the web UI at: http://127.0.0.1:33333

            ---
            See `checksums.txt` for SHA256 checksums.
