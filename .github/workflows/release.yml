name: Build and Release (Linux Only)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release for Linux
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      # ==================== Build Frontend ====================
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install frontend dependencies
        working-directory: frontend
        run: pnpm install

      - name: Build frontend
        working-directory: frontend
        run: pnpm run build

      - name: Verify frontend build
        run: |
          if [ ! -d "frontend/dist" ]; then
            echo "Error: frontend/dist directory not found!"
            exit 1
          fi
          echo "Frontend build verified, dist directory exists"
          ls -la frontend/dist

      # ==================== Build Backend ====================
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Install musl-tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install UPX
        run: sudo apt-get install -y upx

      - name: Build backend for Linux x64
        working-directory: backend
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Strip binary
        run: strip backend/target/x86_64-unknown-linux-musl/release/niu-code

      - name: Compress binary with UPX
        run: |
          upx --best --lzma backend/target/x86_64-unknown-linux-musl/release/niu-code
          ls -lh backend/target/x86_64-unknown-linux-musl/release/niu-code

      # ==================== Prepare Release ====================
      - name: Create release directory
        run: |
          mkdir -p release
          cp backend/target/x86_64-unknown-linux-musl/release/niu-code release/niu-code-linux-x64
          cp scripts/install.sh release/
          chmod +x release/install.sh

      - name: Generate checksums
        working-directory: release
        run: |
          sha256sum * > checksums.txt
          cat checksums.txt

      # ==================== Create GitHub Release ====================
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation (Linux Only)

            ### Quick Install
            ```bash
            curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/install.sh | bash
            ```

            ### Manual Download
            Download `niu-code-linux-x64` from the assets below, then:
            ```bash
            chmod +x niu-code-linux-x64
            sudo mv niu-code-linux-x64 /usr/local/bin/niu-code
            ```

            ### Prerequisites
            - Node.js (v18 or higher)
            - Claude Code CLI: `npm install -g @anthropic-ai/claude-code`

            ### Usage
            ```bash
            niu-code
            ```
            Access the web UI at: http://127.0.0.1:33333

            ---
            See `checksums.txt` for SHA256 checksums.
